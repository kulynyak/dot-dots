# if run as "tmux attach", create a session if one does not already exist
#new-session -A -s main
set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g default-shell /usr/local/bin/zsh
# set -g default-shell /usr/local/bin/fish

set -g default-terminal "screen-256color"

# move status line to bottom
set -g status-position bottom

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scroll-back buffer size
set-option -g history-limit 100000

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

unbind C-b
set -g prefix C-a

# if prefix is 'C-a'
bind C-a send-prefix
bind a last-window

# decoration (256-color)
# tmux messages are displayed for 1 seconds
set -g display-time 1100
set -g status-justify left
set -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set -g status-left-length 16
set -g status-bg colour237
set -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185]#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}#(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set -g status-interval 10
set -g pane-active-border-fg colour72
set -g pane-border-fg colour238
setw -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
setw -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# UTF-8
# setw -g utf8 on

# less stretching to get to the first item
setw -g pane-base-index 1
set -g base-index 1

# renumber windows when a window is closed
set -g renumber-windows on

# pane switching (Alt + np)
bind -n M-n select-pane -t :.+
bind -n M-p select-pane -t :.-

bind -n M-1 select-pane -t 1
bind -n M-2 select-pane -t 2
bind -n M-3 select-pane -t 3
bind -n M-4 select-pane -t 4
bind -n M-5 select-pane -t 5
bind -n M-6 select-pane -t 6
bind -n M-7 select-pane -t 7
bind -n M-8 select-pane -t 8
bind -n M-9 select-pane -t 9
bind -n M-0 select-pane -t 10

# reload config
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# pane resizing
bind -nr C-M-h resize-pane -L 2
bind -nr C-M-j resize-pane -D 2
bind -nr C-M-k resize-pane -U 2
bind -nr C-M-l resize-pane -R 2

# enable mouse support 2.1+
set -g -q mouse on
# toggle mouse on
bind m \
	set -g mouse on \;\
	display 'Mouse: ON'
# toggle mouse off
bind M \
	set -g mouse off \;\
	display 'Mouse: OFF'

# run command in all panes
bind e command-prompt -p "Command:" "run \"tmux list-sessions -F '##{session_name}' | xargs -I SESS ; tmux list-windows -t SESS -F 'SESS:##{window_index}' | xargs -I SESS_WIN ; tmux list-panes -t SESS_WIN -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE ; tmux send-keys -t SESS_WIN_PANE '%1' Enter\""

# clear pane history
bind C clear-history \; display "Cleared history of the current pane."
bind -n C-l send-keys C-l \; run 'sleep 0.05 && tmux clear-history'

# tmux: send input to all panes simultaneously
unbind t
bind t set-window-option synchronize-panes

# list of plugins
# supports `github_username/repo` or full git URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# copy-paste integration
set -g default-command "reattach-to-user-namespace -l zsh"
# set -g default-command "reattach-to-user-namespace -l fish"

# use vim keybindings in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# bind -t vi-copy y copy-pipe "pbcopy"

# update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind -t vi-copy Enter copy-pipe "pbcopy"

# bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
# bind ] run "pbpaste | tmux load-buffer - && tmux paste-buffer"

#===============================================================================
# session switching
bind -n M-O switch-client -n
bind -n M-I switch-client -p

# cycle through windows
bind -n M-L select-window -t :+
bind -n M-H select-window -t :-

# swap current window with next/previous one
bind-key -n M-} swap-window -t :+1
bind-key -n M-{ swap-window -t :-1

# swap current pane with next/previous one
bind -n M-> swap-pane -D
bind -n M-< swap-pane -U

# start copy mode when scrolling up and exit when scrolling down to bottom.
# the "#{mouse_any_flag}" check just sends scrolls to any program running that
# has mouse support (like vim).
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# copy mode
setw -g mode-keys vi
bind u copy-mode
bind -n M-u copy-mode
unbind [
unbind p
unbind f
unbind b
unbind d

bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy 'V' rectangle-toggle
bind-key -t vi-copy C-v rectangle-toggle

bind -t vi-copy f page-up
bind -t vi-copy b page-down
bind -t vi-copy i page-up
bind -t vi-copy o page-down
bind -t vi-copy u halfpage-up
bind -t vi-copy d halfpage-down
bind -t vi-copy m halfpage-down

bind -t vi-copy ? search-forward
bind -t vi-copy / search-backward
bind -t vi-copy J search-reverse
bind -t vi-copy K search-again

# open pane in vim
bind-key V capture-pane -S -102400\; save-buffer /tmp/tmux-capture-pane.txt\; new-window "vim /tmp/tmux-capture-pane.txt"\; delete-buffer
#===============================================================================
# Plugin manager

# Run plugin manager
run-shell 'ellipsis-tpm run'
